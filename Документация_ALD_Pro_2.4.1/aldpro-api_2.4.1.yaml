openapi: 3.0.2
info:
  title: API портала управления
  version: '1.0'
servers:
  - url: '/ad'
    description: Контроллер домена
paths:
  /api/ds/organizational-units:
    get:
      summary: 'Организационная структура: Получить список подразделений'
      description: Возращает список всех подразделений домена
      tags:
        - 'Служба каталогов: Организационная структура'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список подразделений
                    items:
                      $ref: '#/components/schemas/OrganizationalUnitListItem'
                  total:
                    type: integer
                    description: Общее количество подразделений
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    post:
      summary: 'Организационная структура: Создать новое подразделение'
      description: Создает новое подразделение в домене
      tags:
        - 'Служба каталогов: Организационная структура'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/OrganizationalUnitPost'
      responses:
        '201':
          description: Объект создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/OrganizationalUnit'
                      - type: object
                      - properties:
                          organizationunit_inheritance:
                            type: boolean
                            description: Признак наследования объектов групповых политик от вышестоящих подразделений
                            default: true
                        required:
                          - organizationunit_inheritance
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/catalogue/children:
    parameters:
      - schema:
          type: string
        name: nodeDistinguishedName
        in: query
        required: false
        description: DN объекта в каталоге дерева
    get:
      summary: 'Организационная структура: Получить корневые объекты дерева каталога. Переход между уровнями дерева каталога организационной структуры'
      description: Возращает корневые объекты дерева каталога. Переход между уровнями дерева каталога организационной структуры
      tags:
        - 'Служба каталогов: Организационная структура'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tree'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/catalogue/parent-tree:
    parameters:
      - schema:
          type: string
        name: nodeDistinguishedName
        in: query
        required: true
        description: DN объекта в каталоге дерева
    get:
      summary: 'Организационная структура: Возврат в выбранный объект каталога после его конфигурации'
      description: Возращает в выбранный объект каталога после его конфигурации
      tags:
        - 'Служба каталогов: Организационная структура'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tree'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/catalogue/search:
    parameters:
      - schema:
          type: string
        name: query
        in: query
        required: true
        description: Поиск по дереву каталога организационной структуры
    get:
      summary: 'Организационная структура: Поиск по дереву каталога организационной структуры'
      description: Производит поиск по дереву каталога организационной структуры
      tags:
        - 'Служба каталогов: Организационная структура'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tree'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя организационного подразделения
    get:
      summary: 'Организационные подразделения: Получить параметры организационного подразделения'
      description: 'Возвращает информацию об организационном подразделении'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/OrganizationalUnit'
                      - type: object
                      - properties:
                          organizationunit_inheritance:
                            type: boolean
                            description: Признак наследования объектов групповых политик от вышестоящих подразделений
                            default: true
                        required:
                          - organizationunit_inheritance
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: "Объект не найден (HTTP 404)"        
          content:               
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundResponse'
              examples:
                Подразделение не найдено:
                  value:
                    error: "Подразделение с таким DN не найдено"
                    success: false
                    code: NotFoundError
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Организационные подразделения: Изменить параметры организационного подразделения'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/OrganizationalUnit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/OrganizationalUnit'
                      - type: object
                      - properties:
                          organizationunit_inheritance:
                            type: boolean
                            description: Признак наследования объектов групповых политик от вышестоящих подразделений
                            default: true
                        required:
                          - organizationunit_inheritance
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Невозможно перенести подразделение, если на него назначена роль:
                  value:
                    error: "Операция завершена с ошибкой: при удалении/переносе подразделения необходимо удалить назначение роли {roleName} на данное подразделение"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Организационные подразделения: Удалить организационное подразделения и все дочерние объекты'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Невозможно удалить подразделение, если на него назначена роль:
                  value:
                    error: "Операция завершена с ошибкой: при удалении/переносе подразделения необходимо удалить назначение роли {roleName} на данное подразделение"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/organizational-units:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя подразделения
    get:
      summary: 'Организационная структура: Получить список дочерних подразделений'
      description: Возращает список дочерних подразделений
      tags:
        - 'Служба каталогов: Организационная структура'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список дочерних подразделений
                    items:
                      $ref: '#/components/schemas/OrganizationalUnitListItem'
                  total:
                    type: integer
                    description: Общее количество подразделений
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/computers-groups:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя подразделения
    get:
      summary: 'Организационная структура: Получить группы компьютеров подразделения'
      description: Возращает группы компьютеров подразделения
      tags:
        - 'Служба каталогов: Организационная структура'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Организационная структура: Изменить состав групп компьютеров подразделения'
      description: Изменяет состав групп компьютеров подразделения
      tags:
        - 'Служба каталогов: Организационная структура'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      computergroup_name:
                        type: string
                        description: Наименование группы компьютеров
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - total
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/computers:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя организационного подразделения
    get:
      summary: 'Организационные подразделения: Получить список компьютеров организационного подразделения'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComputerListItem'
                  total:
                    type: integer
                    description: Общее количество компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Организационные подразделения: Изменить состав компьютеров организационного подразделения.'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      computer_name:
                        type: string
                        description: Полное доменное имя компьютера
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - total
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/group-policies:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: DN организационного подразделения
    get:
      summary: 'Организационные подразделения: Получить список объектов групповых политик подразделения'
      description: 'Показывает назначенные на подразделение объекты групповых политик'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationalUnitAssignment'                               
                  total:
                    type: integer
                    description: Общее количество объектов
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: "Объект не найден (HTTP 404)"        
          content:               
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundResponse'
              examples:
                Объект не найден:
                  value:
                    error: Подразделение с идентификатором {organizationalUnitDistinguishedName} не найдено
                    success: false
                    code: NotFoundError
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/group-policies/{groupPolicyCommonName}:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: DN организационного подразделения
      - schema:
          type: string
        name: groupPolicyCommonName
        in: path
        required: true
        description: CN объекта групповой политики
    get:
      summary: 'Организационные подразделения: Получить карточку объекта групповой политики, назначенного на организационное подразделение'
      description: 'Возвращает информацию о назначенном объекте групповой политики	'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OrganizationalUnitAssignment'                    
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: "Объект не найден (HTTP 404)"        
          content:               
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundResponse'
              examples:
                Данные не найдены:
                  value:
                    error: Связь подразделения {organizationalUnitDistinguishedName} c групповой политикой {groupPolicyCommonName} не найдена
                    success: false
                    code: NotFoundError                 
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/software-policies:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя организационного подразделения
    get:
      summary: 'Организационные подразделения: Получить список политики ПО'
      description: Возвращает список всех назначенных на подразделение политик ПО
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationalUnitSoftwarePolicyAssignment'
                  total:
                    type: integer
                    description: Общее количество контроллеров домена
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: "Объект не найден (HTTP 404)"        
          content:               
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundResponse'
              examples:
                Объект не найден:
                  value:
                    error: Подразделение с идентификатором {organizationalUnitDistinguishedName} не найдено
                    success: false
                    code: NotFoundError 
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/software-policies/{softwarePolicyId}:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя организационного подразделения
      - schema:
          type: string
        name: softwarePolicyId
        in: path
        required: true
        description: Имя политики
    get:
      summary: 'Организационные подразделения: Получить карточку объекта политики ПО, назначенного на организационное подразделение'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OrganizationalUnitSoftwarePolicyAssignment'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '401':
          $ref: '#/components/responses/UnauthorizedError'       
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/users-groups:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя подразделения
    get:
      summary: 'Организационная структура: Получить список групп пользователей подразделения'
      description: Возращает список групп пользователей подразделения
      tags:
        - 'Служба каталогов: Организационная структура'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество групп пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Организационная структура: Изменить состав групп пользователей подразделения'
      description: Изменяет состав групп пользователей в подразделении
      tags:
        - 'Служба каталогов: Организационная структура'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      usergroup_name:
                        type: string
                        description: Имя группы пользователей
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/organizational-units/{organizationalUnitDistinguishedName}/users:
    parameters:
      - schema:
          type: string
        name: organizationalUnitDistinguishedName
        in: path
        required: true
        description: Уникальное имя организационного подразделения
    get:
      summary: 'Организационные подразделения: Получить список пользователей организационного подразделения.'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserListItem'
                  total:
                    type: integer
                    description: Общее количество пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Организационные подразделения: Изменить состав пользователей организационного подразделения.'
      tags:
        - 'Служба каталогов: Организационные подразделения'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      user_login:
                        type: string
                        description: Имя учетной записи пользователя
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computers:
    get:
      summary: 'Компьютеры: Получить список компьютеров'
      description: Возвращает список компьютеров
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список компьютеров
                    items:
                      $ref: '#/components/schemas/ComputerListItem'
                  total:
                    type: integer
                    description: Общее количество компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/computers/{computerName}:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Наименование компьютера
    get:
      summary: 'Компьютеры: Получить параметры компьютера'
      description: Возвращает параметры компьютера
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Computer'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Компьютеры: Обновить параметры компьютера'
      description: Обновляет параметры компьютера
      tags:
        - 'Служба каталогов: Компьютеры'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  allOf:
                    - type: object
                      description: Переопределение атрибутов объектов
                      properties:
                        computer_organizational_unit_name:
                          readOnly: true
                    - $ref: '#/components/schemas/Computer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Computer'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Компьютеры: Удалить компьютер'
      description: Удаляет компьютер
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computers/{computerName}/update-policies/report:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Наименование компьютера
    get:
      summary: 'Компьютеры: Получить отчет о назначенных политиках обновления на компьютер'
      description: Возвращает отчет о назначенных политиках обновления на компьютер
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupPolicyReport'
                  total:
                    type: integer
                    description: Общее количество назначенных политик
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'        
  /api/ds/computers/{computerName}/group-policy/report:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Имя компьютера
    get:
      summary: 'Компьютеры: Получить отчет о назначенных параметрах групповых политик на компьютер'
      description: 'Возвращает список всех параметров групповых политик компьютера'
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Данные параметров групповых политик, применяемых к компьютеру
                    items:
                      type: object
                      properties:
                        grouppolicyparameter_display_name:
                          type: string
                          description: Имя параметра групповой политики
                        grouppolicy_name:
                          type: string
                          description: Имя объекта групповой политики
                        grouppolicy_ou_display_name:
                          type: string
                          description: Организационное подразделение, с которого были назначены параметры групповой политики на пользователя
                        grouppolicy_ou_dn:
                          type: string
                          description: DN организационного подразделения
                        grouppolicy_os_versions:
                          type: string
                          description: Фильтр версии ОС, на которой должен применятся параметр
                        grouppolicyparameter_attribute_list:
                          type: array
                          description: Список атрибутов параметра групповой политики
                          items:
                            type: object
                            properties:
                                   grouppolicyparameter_attribute_display_name:
                                     type: string
                                     description: Отображаемое имя атрибута параметра групповой политики
                                   grouppolicyparameter_attribute_cn:
                                     type: string
                                     description: CN атрибута параметра групповой политики
                                   grouppolicyparameter_attribute_value:
                                     type: string
                                     description: Значение атрибута параметра групповой политики
                                   grouppolicyparameter_attribute_index:
                                     type: string
                                     description: Порядок отображения атрибута параметра групповой политики
                            required:
                              - grouppolicyparameter_attribute_display_name
                              - grouppolicyparameter_attribute_cn
                              - grouppolicyparameter_attribute_value
                              - grouppolicyparameter_attribute_index
                      required:
                        - grouppolicyparameter_display_name
                        - grouppolicy_name
                        - grouppolicy_ou_display_name
                        - grouppolicy_ou_dn
                        - grouppolicy_os_versions	
                        - grouppolicyparameter_attribute_list	
                  total:
                    type: integer
                    description: Общее количество назначенных параметров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
                  - grouppolicyparameter_attribute_list
        '403':
          $ref: '#/components/responses/DeniedError'
        '404':
          description: "Объект не найден (HTTP 404)"        
          content:               
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundResponse'
              examples:
                Компьютер не найден:
                  value:
                    error: Компьютер {computerName} не найден
                    success: false
                    code: NotFoundError 
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/computers/{computerName}/software/parameters/{parameterId}:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Имя компьютера
      - schema:
          type: string
        name: parameterId
        in: path
        required: true
        description: Имя параметра ПО
    get:
      summary: 'Компьютеры: Получить назначение ПО'
      description: Возвращает параметры устанавливаемого ПО
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SoftwareComputerParameter'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computers/{computerName}/software/report:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Наименование компьютера
    get:
      summary: 'Компьютеры: Получить список назначения ПО'
      description: Возвращает список устанавливаемых на компьютер ПО
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список назначения ПО
                    items:
                      $ref: '#/components/schemas/SoftwareComputerReport'
                  total:
                    type: integer
                    description: Колличество назанчений ПО
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/computers/{computerName}/sessions:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Наименование компьютера
    get:
      summary: 'Компьютеры: Получить список доступных для удаленного подключения сессий пользователей'
      description: Возвращает список доступных для удаленного подключения сессий пользователей
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список активных сессий
                    items:
                      $ref: '#/components/schemas/ComputerUserSession'
                  total:
                    type: integer
                    description: Общее количество контроллеров домена
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computer-groups:
    get:
      summary: 'Группы компьютеров: Получить список групп компьютеров'
      description: Возвращает список групп компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список групп компьютеров
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    post:
      summary: 'Группы компьютеров: Создать новую группу компьютеров'
      description: Создает новую группу компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  allOf:
                    - $ref: '#/components/schemas/ComputerGroup'
                    - type: object
                      properties:
                        computergroup_organizational_unit_name:
                          type: string
                          readOnly: true
      responses:
        '201':
          description: Oбъект создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ComputerGroup'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computer-groups/{computerGroupName}:
    parameters:
      - schema:
          type: string
        name: computerGroupName
        in: path
        required: true
        description: Наименование группы компьютеров
    get:
      summary: 'Группы компьютеров: Получить параметры группы компьютеров'
      description: Возвращает параметры группы компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ComputerGroup'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Группы компьютеров: Обновить параметры группы компьютеров'
      description: Обновляет параметры группы компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  allOf:
                    - $ref: '#/components/schemas/ComputerGroup'
                    - type: object
                      description: Переопределение атрибутов параметров схемы
                      properties:
                        computergroup_name:
                          type: string
                          readOnly: true
                        computergroup_organizational_unit_name:
                          type: string
                          readOnly: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ComputerGroup'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Группы компьютеров: Удалить группу компьютеров'
      description: Удаляет группу компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computer-groups/{computerGroupName}/computers:
    parameters:
      - schema:
          type: string
        name: computerGroupName
        in: path
        required: true
        description: Наименование группы компьютеров
    get:
      summary: 'Группы компьютеров: Получить компьютеры в составе группы.'
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComputerListItem'
                  total:
                    type: integer
                    description: Общее количество компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Группы компьютеров: Изменить состав компьютеров группы.'
      tags:
        - 'Служба каталогов: Группы компьютеров'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      computer_name:
                        type: string
                        description: Полное доменное имя компьютера
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computers/{computerName}/groups:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Наименование компьютера
    get:
      summary: 'Компьютеры: Получить группы компьютеров, в которые входит компьютер'
      description: Возвращает группы компьютеров, в которые входит компьютер
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список групп компьютеров
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Компьютеры: Включить компьютер в состав других групп компьютеров'
      description: Добавляет компьютер в состав других групп компьютеров
      tags:
        - 'Служба каталогов: Компьютеры'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      computergroup_name:
                        type: string
                        description: Наименование группы компьютеров
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computers/{computerName}/groups/indirect:
    parameters:
      - schema:
          type: string
        name: computerName
        in: path
        required: true
        description: Наименование компьютера
    get:
      summary: 'Компьютеры: Получить группы компьютеров, в которые косвенно входит компьютер'
      description: Возвращает группы компьютеров, в которые косвенно входит компьютер
      tags:
        - 'Служба каталогов: Компьютеры'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список групп компьютеров
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/computer-groups/{computerGroupName}/groups/child-groups:
    parameters:
      - schema:
          type: string
        name: computerGroupName
        in: path
        required: true
        description: Наименование группы компьютеров
    get:
      summary: 'Группы компьютеров: Получить группы, которые содержит группа компьютеров'
      description: Возвращает группы, которые содержит группа компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Группы компьютеров: Изменить состав групп компьютеров в составе группы'
      description: Изменяет состав групп компьютеров в составе группы компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      computergroup_name:
                        type: string
                        description: Наименование группы компьютеров
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computer-groups/{computerGroupName}/groups/child-groups/indirect:
    parameters:
      - schema:
          type: string
        name: computerGroupName
        in: path
        required: true
        description: Наименование группы компьютеров
    get:
      summary: 'Группы компьютеров: Получить группы, которые косвенно содержит группа компьютеров'
      description: Возвращает группы, которые косвенно содержит группа компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/computer-groups/{computerGroupName}/groups/parent-groups:
    parameters:
      - schema:
          type: string
        name: computerGroupName
        in: path
        required: true
        description: Наименование группы компьютеров
    get:
      summary: 'Группы компьютеров: Получить группы, в которых состоит группа компьютеров'
      description: Возвращает группы, в которых состоит группа компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Группы компьютеров: Изменить перечень групп, участником которой будет являться группа компьютеров'
      description: Изменяет перечень групп, участником которой будет являться группа компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      computergroup_name:
                        type: string
                        description: Наименование группы компьютеров
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/computer-groups/{computerGroupName}/groups/parent-groups/indirect:
    parameters:
      - schema:
          type: string
        name: computerGroupName
        in: path
        required: true
        description: Наименование группы компьютеров
    get:
      summary: 'Группы компьютеров: Получить группы, в которых косвенно состоит группа компьютеров'
      description: Возвращает группы, в которых косвенно состоит группа компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComputerGroup'
                  total:
                    type: integer
                    description: Общее количество групп компьютеров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/computer-groups/{computerGroupName}/update-policies/report:
    parameters:
      - schema:
          type: string
        name: computerGroupName
        in: path
        required: true
        description: Наименование группы компьютера
    get:
      summary: 'Группы компьютеров: Получить отчет о назначенных политиках обновления на группу компьютеров'
      description: Возвращает список назначенных политиках обновления на группу компьютеров
      tags:
        - 'Служба каталогов: Группы компьютеров'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UpdatePolicyReport'
                  total:
                    type: integer
                    description: Общее количество назначенных политик
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              example:
                error: Отсутствуют права на выполнение данной операции
                success: false
                code: DeniedIPAError           
        '404':
          description: "Объект не найден (HTTP 404)"        
          content:               
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                error: Группа компьютеров с названием не найдена
                success: false
                code: NotFoundError 
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/user-groups:
    get:
      summary: 'Группы пользователей: Получить список групп пользователей'
      description: Возвращает список групп пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список групп пользователей
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество групп пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    post:
      summary: 'Группы пользователей: Создать новую группу пользователей'
      description: Создает новую группу пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  allOf:
                    - type: object
                      description: Переопределение атрибутов объектов
                      properties:
                        usergroup_organizational_unit_name:
                          type: string
                          readOnly: true
                    - $ref: '#/components/schemas/UserGroup'
              required:
                - data
      responses:
        '201':
          description: Объект создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserGroup'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-groups/{userGroupName}:
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      summary: 'Группы пользователей: Получить карточку группы пользователей'
      description: Возвращает карточку группы пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserGroup'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Группы пользователей: Обновить параметры группы пользователей'
      description: Обновляет параметры группы пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  allOf:
                    - $ref: '#/components/schemas/UserGroup'
                    - type: object
                      description: Переопределение значений параметров схемы
                      properties:
                        usergroup_name:
                          type: string
                          readOnly: true
                        usergroup_organizational_unit_name:
                          type: string
                          readOnly: true
              required:
                - data
      responses:
        '200':
          description: Oбъект успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserGroup'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Группы пользователей: Удалить группу пользователей'
      description: Удаляет группу пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-groups/{userGroupName}/groups/child-group:
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      summary: 'Группы пользователей: Получить список групп в составе группы пользователей.'
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество групп пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Группы пользователей: Изменить состав групп в группе пользователей.'
      tags:
        - 'Служба каталогов: Группы пользователей'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      usergroup_name:
                        type: string
                        description: Имя группы пользователей
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Невозможно изменить роль в процессе активации:
                  value:
                    error: "Ошибка изменения роли: невозможно изменить роль {roleName} в процессе активации"
                    success: false
                    code: DeniedIPAError
                Отсутствует привилегия на делегирование ролей:
                  value:
                    error: "Отсутствует привилегия на делегирование ролей Roles Membership - Manage"
                    success: false
                    code: DeniedIPAError
                Недостаточно привилегий для делегирования роли, привязанной к подразделению:
                  value:
                    error: "Недостаточно привилегий для делегирования роли {roleName}, привязанной к подразделению {cn_OU}"
                    success: false
                    code: DeniedIPAError
                Недостаточно привилегий для делегирования роли с текущим набором групп пользователей:
                  value:
                    error: "Недостаточно привилегий для делегирования роли {roleName} группе пользователей {userGroupName}"
                    success: false
                    code: DeniedIPAError
                Невозможно назначить роль с привязкой к подразделению на указанную группу пользователей:
                  value:
                    error: "Ошибка изменения роли: невозможно назначить роль {roleName} с привязкой к подразделению {ou_cn} на группу пользователей {userGroupName}"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-groups/{userGroupName}/groups/child-group/indirect:
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      summary: 'Группы пользователей: Получить группы, которые косвенно содержит группа пользователей'
      description: Возвращает группы, которые косвенно содержит группа пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество групп пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  '/api/ds/user-groups/{userGroupName}/groups/parent-group':
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      summary: 'Группы пользователей: Получить список групп, в состав которых входит группа пользователей'
      description: Возвращает список групп, в состав которых входит группа пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество групп пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    patch:
      summary: 'Группы пользователей: Изменить список групп, в состав которых входит группа пользователей'
      description: Изменяет список групп, в состав которых входит группа пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      usergroup_name:
                        type: string
                        description: Имя группы пользователей
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-groups/{userGroupName}/groups/parent-group/indirect:
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      summary: 'Группы пользователей: Получить список групп, в состав которых косвенно входит группа пользователей'
      description: Возвращает список групп, в состав которых косвенно входит группа пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество групп пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/user-groups/{userGroupName}/users:
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
      summary: 'Группы пользователей: Получить список пользователей в составе группы пользователей.'
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserListItem'
                  total:
                    type: integer
                    description: Общее количество пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Группы пользователей: Изменить состав пользователей в группе пользователей'
      tags:
        - 'Служба каталогов: Группы пользователей'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      user_login:
                        type: string
                        description: Имя учетной записи пользователя
                    required:
                      - user_login
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Невозможно изменить роль в процессе активации:
                  value:
                    error: "Ошибка изменения роли: невозможно изменить роль {roleName} в процессе активации"
                    success: false
                    code: DeniedIPAError
                Отсутствует привилегия на делегирование ролей:
                  value:
                    error: "Отсутствует привилегия на делегирование ролей Roles Membership - Manage"
                    success: false
                    code: DeniedIPAError
                Недостаточно привилегий для делегирования роли, привязанной к подразделению:
                  value:
                    error: "Недостаточно привилегий для делегирования роли {roleName}, привязанной к подразделению {cn_OU}"
                    success: false
                    code: DeniedIPAError
                Недостаточно привилегий для делегирования роли с текущим набором групп пользователей:
                  value:
                    error: "Недостаточно привилегий для делегирования роли {roleName} группе пользователей {userGroupName}"
                    success: false
                    code: DeniedIPAError
                Невозможно назначить роль с привязкой к подразделению на указанную группу пользователей:
                  value:
                    error: "Ошибка изменения роли: невозможно назначить роль {roleName} с привязкой к подразделению {ou_cn} на группу пользователей {userGroupName}"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-groups/{userGroupName}/roles:
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
      summary: 'Группы пользователей: Получить список ролей в составе группы пользователей'
      description: Возвращает список ролей в составе группы пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UsersAndGroupsRoleListItem'
                  total:
                    type: integer
                    description: Общее количество ролей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-groups/{userGroupName}/roles/indirect:
    parameters:
      - schema:
          type: string
        name: userGroupName
        in: path
        required: true
        description: Наименование группы пользователей
    get:
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
      summary: 'Группа пользователей: Получить список ролей, в которые косвенно входит группа пользователей'
      description: Возвращает список ролей, в которые косвенно входит группа пользователей
      tags:
        - 'Служба каталогов: Группы пользователей'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UsersAndGroupsRoleListItem'
                  total:
                    type: integer
                    description: Общее количество ролей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/dsserver/schema/attributetypes:
    get:
      summary: 'Конфигурация службы каталогов: Получить значения справочника типов данных атрибутов схемы'
      description: Возвращает значения справочника типов данных атрибутов схемы
      tags:
        - 'Служба каталогов: Конфигурация службы каталогов'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Массив типов данных атрибутов схему службы каталогов
                    items:
                      $ref: '#/components/schemas/DSServerSchemaAttributeType'
                  total:
                    type: integer
                    description: Общее количество типов данных
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/dsserver/schema/customuserattributes/{customUserAttributeName}:
    parameters:
      - schema:
          type: string
        name: customUserAttributeName
        in: path
        required: true
        description: Наименование дополнительного атрибута
    get:
      summary: 'Конфигурация службы каталогов: Получить карточку дополнительного атрибута'
      description: Возвращает карточку дополнительного атрибута
      tags:
        - 'Служба каталогов: Конфигурация службы каталогов'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DSServerSchemaCustomUserAttribute'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'          
  /api/ds/preserved/users:
    get:
      summary: 'Пользователи: Получить список хранимых пользователей'
      description: Возвращает список пользователей в корзине
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PreservedUserListItem'
                  total:
                    type: integer
                    description: Общее количество пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/preserved/users/{userName}:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись хранимого пользователя
    get:
      summary: 'Пользователи: Получить карточку хранимого пользователя'
      description: Получить карточку пользователя, находящихся в корзине
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PreservedUser'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Пользователи: Удалить хранимого пользователя из корзины'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/preserved/users/{userName}/proxy_addresses:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Идентификатор пользователя
    get:
      summary: 'Пользователи: Получить перечень значений прокси адресов хранимого пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: 'Массив адресов прокси адресов хранимого пользователя {userName}'
                    items:
                      $ref: '#/components/schemas/UserProxyAddress'
                  total:
                    type: integer
                    description: Общее количество адресов в массиве
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
              examples:
                example-1:
                  value:
                    data:
                      - userproxyaddress_type: SMTP
                        userproxyaddress_body: string
                    total: 0
                    success: true
        '500':
          $ref: '#/components/responses/ErrorResponse'
      operationId: get-api-ds-preserved-users-userName-proxy_addresses
      description: 'Получает перечень значений proxyAddresses пользователя {userName}'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/preserved/users/{userName}/actions/restore:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись хранимого пользователя
    post:
      summary: 'Пользователи: Восстановить хранимого пользователя из корзины'
      description: Восстанавливает пользователя из корзины
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user_password:
                      type: string
                      description: Пароль пользователя
                  required:
                    - user_password
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-profile:
    get:
      summary: 'Пользователи: Получить параметры текущего пользователя (Личный кабинет)'
      description: Возвращает данные аутентифицированного пользователя (Личный кабинет)
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Пользователи: Обновить параметры текущего пользователя (Личный кабинет)'
      description: 'Обновляет параметры текущего пользователя (Личный кабинет): номер мобильного и ssh ключ'
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user_mobile:
                      type: string
                      description: Номер мобильного телефона пользователя
                      example: +7 (968) 2280822
                    user_ssh_public_keys:
                      type: array
                      description: Ключи SSH пользователя
                      items:
                        $ref: '#/components/schemas/UserSSHPublicKey'
                      default: []
      responses:
        '200':
          description: Oбъект успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                  success:
                    type: boolean
                    description: Признак успеха операции
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/user-profile/reset-password:
    post:
      summary: 'Пользователи: Изменить пароль текущего пользователя  (Личный кабинет)'
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user_current_password:
                      type: string
                      description: Текущий пароль пользователя
                    user_new_password:
                      type: string
                      description: Новый пароль пользователя
                  required:
                    - user_password
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '400':
          description: "Ответ сервера об ошибке (HTTP 400)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
              examples:
                Пароль слишком простой:
                  value:
                    error: Пароль слишком простой
                    success: False
                    code: PasswordRejectedError
                Отсутствует обязательное поле:
                  value:
                    error: '{Имя поля}: Обязательное поле'
                    success: False
                    code: ValidationError
                Поле не может быть пустым:
                  value:
                    error: Это поле не может быть пустым
                    success: False
                    code: ValidationError
                Пароль слишком короткий:
                  value:
                    error: Пароль слишком короткий
                    success: False
                    code: PasswordRejectedError
                Пароль слишком длинный:
                  value:
                    error: Пароль слишком длинный
                    success: False
                    code: PasswordRejectedError                                      
                Пароль использовался ранее:
                  value:
                    error: Нельзя использовать пароль повторно
                    success: False
                    code: PasswordRejectedError  
        '401':
          $ref: '#/components/responses/UnauthorizedError'                 
        '403':
          description: "Ошибка авторизации (HTTP 403)"
          content:
            application/json:
              schema:
                $ref: '#/components/responses/DeniedError'
              examples:
                Некорректный пароль:
                  value:
                    error: Некорректный пароль
                    success: False
                    code: IncorrectPassword                  
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/users:
    get:
      summary: 'Пользователи: Получить список пользователей'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Список пользователей
                    items:
                      $ref: '#/components/schemas/UserListItem'
                  total:
                    type: integer
                    description: Общее количество пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    post:
      summary: 'Пользователи: Создать нового пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/UserCreateDTO'
      responses:
        '201':
          description: Объект создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '400':
           description: "Ответ сервера об ошибке (HTTP 400)"
           content:
              application/json:
                 schema:
                    $ref: '#/components/schemas/InvalidData'
                 examples:
                    Запрещенные значения имени:
                       value:
                          error: "user_first_name: Запрещенные значения Null_user_first_name"
                          success: false
                          code: ValidationError          
                    Запрещенные значения фамилии:
                       value:
                          error: "user_last_name: Запрещенные значения Null_user_last_name"
                          success: false
                          code: ValidationError                                          
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/users/{userName}:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
    get:
      summary: 'Пользователи: Получить параметры пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Пользователи: Обновить параметры пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  allOf:
                    - $ref: '#/components/schemas/User'
                    - type: object
                      description: Переопределение атрибутов параметров схемы
                      properties:
                        user_password:
                          type: string
                          readOnly: true
                        user_login:
                          type: string
                          readOnly: true
                        user_photo:
                          type: string
                          readOnly: true
      responses:
        '200':
          description: Oбъект успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                  success:
                    type: boolean
                    description: Признак успеха операции
        '400':
           description: "Ответ сервера об ошибке (HTTP 400)"
           content:
              application/json:
                 schema:
                    $ref: '#/components/schemas/InvalidData'
                 examples:
                    Запрещенные значения имени:
                       value:
                          error: "user_first_name: Запрещенные значения Null_user_first_name"
                          success: false
                          code: ValidationError          
                    Запрещенные значения фамилии:
                       value:
                          error: "user_last_name: Запрещенные значения Null_user_last_name"
                          success: false
                          code: ValidationError                                          
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Роль, назначенная на пользователя, не распространяется на его новое подразделение:
                  value:
                    error: "Ошибка изменения пользователя: невозможно перенести пользователя {user_cn} в новое подразделение в связи с назначением роли {roleName} на пользователя"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 'Пользователи: Удалить пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Невозможно удалить единственного пользователя в роли главного администратора домена:
                  value:
                    error: "Невозможно удалить единственного пользователя в роли главного администратора домена"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/users/{userName}/custom-attributes:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
    get:
      summary: 'Пользователи: Получить список дополнительных атрибутов пользователя'
      description: Возвращает список дополнительных атрибутов пользователя
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserCustomAttribute'
                  total:
                    type: integer
                    description: Общее количество пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Пользователи: Обновить данные дополнительных атрибутов пользователя'
      description: Обновляет данные дополнительных атрибутов пользователя
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserCustomAttributePatch'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserCustomAttribute'
                  total:
                    type: integer
                    description: Общее количество пользователей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/users/{userName}/group-policy/report:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
    get:
      summary: 'Пользователи: Получить отчет о назначенных параметрах групповых политик на пользователя'
      description: 'Возвращает список параметров групповых политик назначенных на пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Данные параметров групповых политик, применяемых к пользователю
                    items:
                      type: object
                      properties:
                        grouppolicyparameter_display_name:
                          type: string
                          description: Имя параметра групповой политики
                        grouppolicy_name:
                          type: string
                          description: Имя объекта групповой политики
                        grouppolicy_ou_display_name:
                          type: string
                          description: Организационное подразделение, с которого были назначены параметры групповой политики на пользователя
                        grouppolicy_ou_dn:
                          type: string
                          description: DN организационного подразделения
                        grouppolicy_os_versions:
                          type: string
                          description: Фильтр версии ОС, на которой должен применятся параметр
                        grouppolicyparameter_attribute_list:
                          type: array
                          description: Список атрибутов параметра групповой политики
                          items:
                            type: object
                            properties:
                                   grouppolicyparameter_attribute_display_name:
                                     type: string
                                     description: Отображаемое имя атрибута параметра групповой политики
                                   grouppolicyparameter_attribute_cn:
                                     type: string
                                     description: CN атрибута параметра групповой политики
                                   grouppolicyparameter_attribute_value:
                                     type: string
                                     description: Значение атрибута параметра групповой политики
                                   grouppolicyparameter_attribute_index:
                                     type: string
                                     description: Порядок отображения атрибута параметра групповой политики
                            required:
                              - grouppolicyparameter_attribute_display_name
                              - grouppolicyparameter_attribute_cn
                              - grouppolicyparameter_attribute_value
                              - grouppolicyparameter_attribute_index
                      required:
                        - grouppolicyparameter_display_name
                        - grouppolicy_name
                        - grouppolicy_ou_display_name
                        - grouppolicy_ou_dn
                        - grouppolicy_os_versions	
                        - grouppolicyparameter_attribute_list	
                  total:
                    type: integer
                    description: Общее количество назначенных параметров
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/DeniedError'
        '500':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          description: "Объект не найден (HTTP 404)"        
          content:               
            application/json:
              schema: 
                $ref: '#/components/schemas/NotFoundResponse'
              examples:
                Пользователь не найден:
                  value:
                    error: Пользователь {userName} не найден
                    success: false
                    code: NotFoundError 
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/users/{userName}/user-groups:
    parameters:
      - $ref: '#/components/parameters/FieldsQueryParam'
      - $ref: '#/components/parameters/FiltersQueryParam'
      - $ref: '#/components/parameters/LimitQueryParam'
      - $ref: '#/components/parameters/OffsetQueryParam'
      - $ref: '#/components/parameters/OrderByQueryParam'
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
    get:
      summary: 'Пользователи: Получить список групп пользователей, в которые входит пользователь'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество контроллеров домена
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
    patch:
      summary: 'Пользователи: Добавить группу пользователей, в которые входит пользователь'
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      usergroup_name:
                        type: string
                    required:
                      - usergroup_name
              required:
                - data
      responses:
        '200':
          description: ОК
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Невозможно изменить роль в процессе активации:
                  value:
                    error: "Ошибка изменения роли: невозможно изменить роль {roleName} в процессе активации"
                    success: false
                    code: DeniedIPAError
                Отсутствует привилегия на делегирование ролей:
                  value:
                    error: "Отсутствует привилегия на делегирование ролей Roles Membership - Manage"
                    success: false
                    code: DeniedIPAError
                Недостаточно привилегий для делегирования роли, привязанной к подразделению:
                  value:
                    error: "Недостаточно привилегий для делегирования роли {roleName}, привязанной к подразделению {cn_OU}"
                    success: false
                    code: DeniedIPAError
                Недостаточно привилегий для делегирования роли с текущим набором групп пользователей:
                  value:
                    error: "Недостаточно привилегий для делегирования роли {roleName} группе пользователей {userGroupName}"
                    success: false
                    code: DeniedIPAError
                Невозможно назначить роль с привязкой к подразделению на указанные группы пользователей:
                  value:
                    error: "Ошибка изменения роли: невозможно назначить роль {roleName} с привязкой к подразделению {ou_cn} на группу пользователей {userGroupName}"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/users/{userName}/user-groups/indirect:
    parameters:
      - $ref: '#/components/parameters/FieldsQueryParam'
      - $ref: '#/components/parameters/FiltersQueryParam'
      - $ref: '#/components/parameters/LimitQueryParam'
      - $ref: '#/components/parameters/OffsetQueryParam'
      - $ref: '#/components/parameters/OrderByQueryParam'
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
    get:
      summary: 'Пользователи: Получить список групп пользователей, в которые косвенно входит пользователь'
      description: Возвращает список групп пользователей, в которые косвенно входит пользователь
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroupListItem'
                  total:
                    type: integer
                    description: Общее количество контроллеров домена
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  '/api/ds/users/{userName}/roles':
    get:
      parameters:
      - $ref: '#/components/parameters/FieldsQueryParam'
      - $ref: '#/components/parameters/FiltersQueryParam'
      - $ref: '#/components/parameters/LimitQueryParam'
      - $ref: '#/components/parameters/OffsetQueryParam'
      - $ref: '#/components/parameters/OrderByQueryParam'
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
      summary: 'Пользователи: Получить список ролей пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      description: Возвращаеь список ролей пользователя
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Массив ролей
                    items:
                      $ref: '#/components/schemas/RoleListItem'
                  total:
                    type: integer
                    description: Общее количество ролей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
  '/api/ds/users/{userName}/roles/indirect':
    get:
      parameters:
      - $ref: '#/components/parameters/FieldsQueryParam'
      - $ref: '#/components/parameters/FiltersQueryParam'
      - $ref: '#/components/parameters/LimitQueryParam'
      - $ref: '#/components/parameters/OffsetQueryParam'
      - $ref: '#/components/parameters/OrderByQueryParam'
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
      summary: 'Пользователи: Получить список ролей пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      description: Возвращаеь список ролей пользователя
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Массив ролей
                    items:
                      $ref: '#/components/schemas/RoleListItem'
                  total:
                    type: integer
                    description: Общее количество ролей
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'          
  /api/ds/countries:
    get:
      summary: 'Служба каталогов: получить значения справочника стран'
      description: Возвращает список всех стран
      tags:
        - 'Служба каталогов: Справочники'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSServerCountry'
                  total:
                    type: integer
                    description: Общее количество стран
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
        '500':
          $ref: '#/components/responses/ErrorResponse'
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
  /api/ds/users/{userName}/actions/{actionName}:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
      - schema:
          type: string
          enum:
            - enable
            - disable
        name: actionName
        in: path
        required: true
        description: Состояние блокироки учетной записи пользователя
    post:
      summary: 'Пользователи: Изменить состояние блокировки учетной записи пользователя'
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - success
        '403':
          description: Ошибка авторизации (HTTP 403).
          content:
            application/json:
              schema:
                    $ref: '#/components/responses/DeniedError'
              examples:
                Невозможно заблокировать единственного пользователя в роли главного администратора домена:
                  value:
                    error: "Невозможно заблокировать единственного пользователя в роли главного администратора домена"
                    success: false
                    code: DeniedIPAError
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/users/{userName}/actions/reset-password:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Учетная запись пользователя
    post:
      summary: 'Пользователи: Изменить пароль пользователя'
      description: Изменяет пароль пользователя
      tags:
        - 'Служба каталогов: Пользователи'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user_password:
                      type: string
                      description: Пароль пользователя
                  required:
                    - user_password
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/users/{userName}/proxy_addresses:
    parameters:
      - schema:
          type: string
        name: userName
        in: path
        required: true
        description: Идентификатор пользователя
    get:
      summary: 'Пользователи: Получить перечень значений proxyAddresses пользователя'
      description: Возвращает перечень значений proxyAddresses пользователя
      tags:
        - 'Служба каталогов: Пользователи'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: 'Массив адресов proxyAddresses пользователя {userName}'
                    items:
                      $ref: '#/components/schemas/UserProxyAddress'
                  total:
                    type: integer
                    description: Общее количество адресов в массиве
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
              examples:
                example-1:
                  value:
                    data:
                      - userproxyaddress_type: SMTP
                        userproxyaddress_body: string
                    total: 0
                    success: true
        '500':
          $ref: '#/components/responses/ErrorResponse'
      operationId: get-api-ds-users-userName-proxy_addresses
      parameters:
        - $ref: '#/components/parameters/FieldsQueryParam'
        - $ref: '#/components/parameters/FiltersQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/OffsetQueryParam'
        - $ref: '#/components/parameters/OrderByQueryParam'
    put:
      summary: 'Пользователи: Обновить перечень значений proxyAddresses пользователя'
      operationId: put-api-ds-users-userName-proxy_addresses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: 'Массив адресов proxyAddresses пользователя {userName}'
                    items:
                      $ref: '#/components/schemas/UserProxyAddress'
                  total:
                    type: integer
                    description: Общее количество адресов в массиве
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - data
                  - total
                  - success
              examples:
                example-1:
                  value:
                    data:
                      - userproxyaddress_type: SMTP
                        userproxyaddress_body: string
                    total: 0
                    success: true
        '500':
          $ref: '#/components/responses/ErrorResponse'
      tags:
        - 'Служба каталогов: Пользователи'
      description: 'Обновляет перечень значений proxyAddresses пользователя {userName}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  description: 'Массив адресов proxyAddresses пользователя {username}'
                  items:
                    $ref: '#/components/schemas/UserProxyAddress'
            examples:
              example-1:
                value:
                  data:
                    - userproxyaddress_type: SMTP
                      userproxyaddress_body: string
        description: ''
  /api/ds/login:
    post:
      summary: 'Аутентификация пользователя: вход'
      tags:
        - Аутентификация пользователя
      description: Aутентификация по керберос-сессии или логину-паролю
      requestBody:
        required: true
        description: Аутентификация по логину-паролю(при аутентификации по керберос-сессии тело запроса не требуется)
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    login:
                      type: string
                      description: Логин пользователя
                      example: login
                    password:
                      type: string
                      description: Пароль пользователя
                      example: password
                  required:
                    - login
                    - password
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /ad/api/ds/login/refresh-password:
    post:
      summary: 'Аутентификация пользователя: сброс пароля, если пароль истек, и вход'
      tags:
        - Аутентификация пользователя
      description: Аутентифицирует пользователя и устанавливает новый пароль, если пароль истек
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    login:
                      type: string
                      description: Логин пользователя
                      example: login
                    old_password:
                      type: string
                      description: Старый пароль пользователя
                      example: password
                    new_password:
                      type: string
                      description: Новый пароль пользователя
                      example: password01
                  required:
                    - login
                    - old_password
                    - new_password
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '400':
          description: "Ответ сервера об ошибке (HTTP 400)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
              examples:
                Отсутствует обязательное поле:
                  value:
                    error: Отсутствует обязательное поле
                    success: False
                    code: ValidationError
                Поле не может быть пустым:
                  value:
                    error: Это поле не может быть пустым
                    success: False
                    code: ValidationError
                Пароль слишком короткий:
                  value:
                    error: Пароль слишком короткий
                    success: False
                    code: PasswordRejectedError
                Пароль слишком длинный:
                  value:
                    error: Пароль слишком длинный
                    success: False
                    code: PasswordRejectedError                    
                Пароль слишком простой:
                  value:
                    error: Пароль слишком простой
                    success: False
                    code: PasswordRejectedError                   
                Пароль использовался ранее:
                  value:
                    error: Нельзя использовать пароль повторно
                    success: False
                    code: PasswordRejectedError  
        '401':
          description: "Ошибка аутентификации (HTTP 401)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestResponse'
              examples:
                Некорректный логин или пароль:
                  value:
                    error: Некорректный логин или пароль
                    success: False
                    code: UnauthorizedError
        '500':
          $ref: '#/components/responses/ErrorResponse'       
  /api/ds/logout:
    post:
      summary: 'Аутентификация пользователя: выход'
      tags:
        - Аутентификация пользователя
      description: Выход пользователя из сессии
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Признак успеха операции
                required:
                  - success
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/ds/whoami:
    get:
      summary: 'Аутентификация пользователя: получить данные о текущей сессии пользователя'
      tags:
        - 'Аутентификация пользователя'
      description: Возвращает данные о текущей сессии пользователя
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  FreeIpa:
                    description: Информация о пользователе из FreeIpa
                    $ref: '#/components/schemas/Whoami'
                  LDAP:
                    type: string
                    description: Cостояние LDAP
                    example: not ready
                  password_expire_at_days:
                    type: integer
                    description: "Количество дней до окончания действия пароля"
                    example: -1
                required:
                  - FreeIpa
        '500':
          $ref: '#/components/responses/ErrorResponse'
components:

  schemas:
    UpdatePolicyReport:
      type: object
      description: Отчет о назначенных политиках обновления
      properties:
        updatepolicyreport_display_name:
          type: string
          description: Имя политики обновления
        updatepolicyreport_cn:
          type: string
          description: CN политики обновления
        updatepolicyreport_state:
          type: boolean
          description: Статус политики обновления
      required:
        - updatepolicyreport_display_name
        - updatepolicyreport_cn
        - updatepolicyreport_state
    InvalidData:
      type: object
      properties:
        error:
          type: string
          description: Сообщение об ошибке
          default: Отправлены некорректные параметры или нет обязательных параметров
        success:
          type: boolean
          description: Результат выполнения операции
          default: false
        code:
          type: "string"
          description: "Статус ошибки"
          default: InvalidData                
      required:
              - error
              - success
    InvalidRequestResponse:
      type: object
      properties:
        error:
          type: string
          description: Сообщение об ошибке
          default: Пожалуйста, выполните авторизацию
        success:
          type: boolean
          description: Результат выполнения операции
          default: false
        code:
          type: "string"
          description: "Статус ошибки"
          default: InvalidData                
      required:
              - error
              - success
    RoleListItem:
      type: object
      description: Список ролей
      properties:
        rolelistitem_name:
          type: string
          description: Название роли
        rolelistitem_system:
          type: boolean
          description: Системная роль
        rolelistitem_description:
          type: string
          description: Описание роли
        rolelistitem_type:
          type: string
          description: Тип роли
          enum:
            - custom
            - predefined
            - system
        rolelistitem_editable:
          type: string
          description: Признак редактируемой роли
        rolelistitem_state:
          type: string
          description: Состояние роли
          enum:
            - editing
            - pending
            - processing
            - done
            - error
          default: done
        rolelistitem_state_display_name:
          type: string
          description: "Состояние роли (русское название)"
          enum:
            - редактируется
            - ожидает активации 
            - активируется
            - активно
            - ошибка
          default: активно        
    FilterQueryParam:
      title: FilterQueryParam
      type: object
      properties:
        property:
          type: string
          description: 'Поле модели данных, по которому производится фильтрация массива данных'
        value:
          type: string
          description: 'Значение поля, по которому производится фильтрация массива данных'
        operator:
          type: string
          default: eq
          enum:
            - le
            - lt
            - ge
            - gt
            - eq
            - neq
            - ilike
            - startwith
            - endwith
          description: Оператор поиска значения value в поле property
        join:
          type: string
          default: AND
          enum:
            - AND
            - OR
          description: Правило конкатинации с предыдущим правилом
        disabled:
          type: boolean
          description: 'true - правило активно, false - правило отключено, значение по уиолчанию - true'
      required:
        - property
        - value

    DSServerCountry:
      type: object
      description: Элемент справочника стран
      properties:
        dsservercountry_code:
          type: string
          description: Уникальный классифицированный код страны (Alpha2)
        dsservercountry_name:
          type: string
          description: Наименование страны
      required:
        - dsservercountry_code
    
    OrganizationalUnitListItem:
      type: object
      description: Элемент списка подразделений
      properties:
        organizationunitlistitem_ou:
          type: string
          description: Идентификатор организационной единицы
        organizationunitlistitem_display_name:
          type: string
          description: Отображаемое наименование организационной единицы
        organizationunitlistitem_dn:
          type: string
          description: DN организационной единицы в каталоге LDAP
        organizationunitlistitem_is_leaf:
          type: boolean
          description: Признак отсутствия дочерних подразделений у данного подразделения
          default: false
        organizationunitlistitem_parent_name:
          type: string
          description: Наименование родительского подразделения
        organizationunitlistitem_parent_dn:
          type: string
          description: DN родительского подразделения
      required:
        - organizationunitlistitem_ou
        - organizationunitlistitem_display_name
        - organizationunitlistitem_dn
        - organizationunitlistitem_is_leaf
    Tree:
      type: object
      description: 'В связи с ограничениями сваггера, рекурсивное определение модели дерева не используется, для примера модели схемы определены три уровня.'
      properties:
        tree_node:
          $ref: '#/components/schemas/TreeNode'
        tree_node_children:
          type: array
          default: []
          items:
            $ref: '#/components/schemas/Tree'
      required:
        - tree_node
    TreeNode:
      type: object
      description: Элемент дерева каталога
      properties:
        treenode_display_name:
          type: string
          description: Отображаемое имя объекта в дереве каталога
        treenode_dn:
          type: string
          description: DN объекта в дереве каталога в LDAP
        treenode_parent_dn:
          type: string
          description: DN родительского объекта каталога в LDAP
        treenode_is_leaf:
          type: boolean
          description: Признак отсутствия дочерних объектов у данного
          default: false
        treenode_type:
          type: string
          description: Тип объекта в дереве каталога
          enum:
            - folder
            - file
      required:
        - treenode_display_name
        - treenode_dn
        - treenode_parent_dn
        - treenode_is_leaf
        - treenode_type
    Address:
      type: object
      description: Адрес местоположения
      properties:
        address_postal_code:
          type: string
          description: Почтовый код
        address_country:
          type: string
          description: Страна
        address_state:
          type: string
          description: 'Область, край'
        address_locality:
          type: string
          description: Город
        address_street:
          type: string
          description: Улица
    UsersAndGroupsRoleListItem:
      type: object
      description: Роли в составе группы пользователей
      properties:
        rolelistitem_name:
          type: string
          description: Название роли
        rolelistitem_system:
          type: boolean
          description: Системная роль
        rolelistitem_editable:
          type: boolean
          default: False
          description: Роль редактируемая
        rolelistitem_state:
          type: string
          description: Состояние роли
          enum:
            - editing
            - pending
            - processing
            - done
            - error
          default: done
        rolelistitem_state_display_name:
          type: string
          description: "Состояние роли (русское название)"
          enum:
            - редактируется
            - ожидает активации 
            - активируется
            - активно
            - ошибка
          default: активно
        rolelistitem_description:
          type: string
          description: Описание роли
        rolelistitem_type:
          type: string
          description: Тип роли
          enum:
            - custom
            - predefined
            - system
    OrganizationalUnitObject:
      type: object
      description: Объект домена
      properties:
        organizationalunitobject_name:
          type: string
          description: Имя объекта домена
        organizationalunitobject_type:
          type: string
          description: Тип объекта домена
        organizationalunitobject_type_name:
          type: string
          description: ''
          enum:
            - user
            - user-group
            - computer
            - computer-group
      required:
        - organizationalunitobject_name
        - organizationalunitobject_type
    OrganizationalUnit:
      description: Подразделение
      allOf:
        - type: object
          properties:
            organizationunit_ou:
              type: string
              description: Идентификатор организационной единицы
              readOnly: true
            organizationunit_display_name:
              type: string
              description: Отображаемое наименование организационной единициы
            organizationunit_dn:
              type: string
              description: DN организационной единицы в каталоге LDAP
              readOnly: true
            organizationunit_is_leaf:
              type: boolean
              description: Признак отсутствия дочерних подразделений у данного подразделения
              default: false
              readOnly: true
            organizationunit_parent_name:
              type: string
              description: Наименование родительского подразделения
              readOnly: true
            organizationunit_parent_dn:
              type: string
              description: DN родительского подразделения
            organizationunit_manager_name:
              type: string
              description: ФИО руководителя подразделения
              readOnly: true
            organizationunit_manager_dn:
              type: string
              description: DN руководителя подразделения
            organizationunit_description:
              type: string
              description: Описание организационной единицы
          required:
            - organizationunit_ou
            - organizationunit_display_name
            - organizationunit_dn
            - organizationunit_is_leaf
        - $ref: '#/components/schemas/Address'
    OrganizationalUnitPost:
      description: Подразделение
      allOf:
        - type: object
          properties:
            organizationunit_display_name:
              type: string
              description: Отображаемое наименование организационной единициы
            organizationunit_parent_dn:
              type: string
              description: DN родительского подразделения
            organizationunit_manager_dn:
              type: string
              description: DN руководителя подразделения
            organizationunit_description:
              type: string
              description: Описание организационной единицы
          required:
            - organizationunit_display_name
            - organizationunit_dn   
    ComputerListItem:
      description: Элемент списка компьютеров
      type: object
      properties:
        computerlistitem_name:
          type: string
          description: Полное доменное имя компьютера
        computerlistitem_ip_address:
          type: string
          description: IP адрес компьютера
      required:
        - computerlistitem_name
    ComputerGroup:
      type: object
      description: Группа компьютеров
      properties:
        computergroup_name:
          type: string
          description: Наименование группы компьютеров
          pattern: '^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*$'
        computergroup_dn:
          type: string
          description: DN группы компьютеров
          readOnly: true
        computergroup_organizational_unit_name:
          type: string
          description: 'Наименование подразделения, которому принадлежит группа компьютеров'
        computergroup_organizational_unit_dn:
          type: string
          description: 'DN подразделения, которому принадлежит группа компьютеров'
        computergroup_description:
          type: string
          description: Описание группы компьютеров
      required:
        - computergroup_name
        - computergroup_dn
        - computergroup_organizational_unit_name
        - computergroup_organizational_unit_dn
    Computer:
      description: Компьютер
      allOf:
        - type: object
          properties:
            computer_name:
              type: string
              description: Полное доменное имя компьютера
              readOnly: true
            computer_kerberos_principal_name:
              type: string
              description: Псевдоним Kerberos учетной записи компьютера
              readOnly: true
            computer_organizational_unit_name:
              type: string
              description: 'Наименование подразделения, которому принадлежит компьютер'
            computer_organizational_unit_dn:
              type: string
              description: 'DN подразделения, которому принадлежит компьютер'
            computer_description:
              type: string
              description: Описание компьютера
            computer_operating_system:
              type: string
              description: Операционная система компьютера
            computer_platform:
              type: string
              description: Платформа компьютера
            computer_mac_address:
              type: string
              description: MAC адрес компьютера
            computer_ip_address:
              type: string
              description: IP адрес компьютера
              readOnly: true
          required:
            - computer_name
            - computer_kerberos_principal_name
            - computer_organizational_unit_name
            - computer_organizational_unit_dn
        - $ref: '#/components/schemas/Address'
    ComputerUserSession:
      type: object
      description: NoVNC сессия пользователя
      properties:
        computerusersession_login:
          type: string
          description: 'Логин учетной записи пользователя, под которым запущена сессия'
        computerusersession_port:
          type: integer
          description: Порт для подключения
      required:
        - computerusersession_login
        - computerusersession_port
    OrganizationalUnitAssignment:
      type: object
      description: 'Список групповых политик, назначенных на организационное подразделение'
      properties:
        organizationalunitassignment_grouppolicy_display_name:
          type: string
          description: 'Отображаемое имя объекта групповой политики, назначенной на подразделение'
        organizationalunitassignment_grouppolicy_cn:
          type: string
          description: Идентификатор объекта групповой политики
        organizationalunitassignment_grouppolicy_priority:
          type: integer
          description: Приоритет объекта групповой политики
        organizationalunitassignment_grouppolicy_enforced:
          type: boolean
          description: Флаг 'Наследовать принудительно'
          default: False           
      required:
        - organizationalunitassignment_grouppolicy_display_name
        - organizationalunitassignment_grouppolicy_cn
        - organizationalunitassignment_grouppolicy_priority
        - organizationalunitassignment_grouppolicy_enforced
    OrganizationalUnitSoftwarePolicyAssignment:
      type: object
      description: Политики ПО
      properties:
        organizationalunitsoftwareassignment_software_policy_display_name:
          type: string
          description: Имя политики ПО
        organizationalunitsoftwareassignment_software_policy_cn:
          type: string
          description: СN политики ПО
        organizationalunitsoftwareassignment_computers:
          type: integer
          description: Параметры компьютеров политики ПО
        organizationalunitsoftwareassignment_computer_groups:
          type: integer
          description: Параметры группы-компьютеров политики ПО
        organizationalunitsoftwareassignment_software_policy_priority:
          type: integer
          description: Приоритет политики ПО
      required:
        - organizationalunitsoftwareassignment_software_policy_display_name
        - organizationalunitsoftwareassignment_software_policy_cn
    User:
      description: Пользователь
      allOf:
        - type: object
          properties:
            user_login:
              type: string
              description: Учетная запись пользователя
              pattern: '(?!^[0-9]+$)^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$'
              maxLength: 255
            user_first_name:
              type: string
              description: Имя пользователя. Поле может быть обязательном, зависит от настроек домена
            user_middle_name:
              type: string
              description: Отчество пользователя
            user_last_name:
              type: string
              description: Фамилия пользователя. Поле может быть обязательном, зависит от настроек домена
            user_common_name:
              type: string
              description: Полное имя пользователя
            user_photo:
              type: string
              description: Фотография пользователя в формате JPEG (LDAP syntax OID 1.3.6.1.4.1.1466.115.121.1.28)
            user_uid_number:
              type: integer
              description: Уникальный номер пользователя
            user_organizational_unit_name:
              type: string
              description: Имя организациоонного подразделения, относящиеся к пользователю
            user_organizational_unit_dn:
              type: string
              description: 'DN организационного подразделения, которому принадлежит группа пользователь'
            user_title:
              type: string
              description: Должность
            user_manager_common_name:
              type: string
              description: Полное имя руководителя пользователя
              readOnly: true
            user_manager_dn:
              type: string
              description: DN руководителя пользователя
            user_password:
              type: string
              description: Пароль пользователя
            user_password_expiration_date:
              type: string
              description: Дата истечения срока действия пароля
              format: date-time
              readOnly: true
            user_mail:
              type: string
              format: email
              description: Почтовый адрес пользователя
            user_mobile:
              type: array
              items:
                type: string
              description: Номер мобильного телефона пользователя
              example: ["+3 (622) 346-59-879", "+79999999999"]
            user_telephone_number:
              type: array
              items:
                type: string
              description: Номер рабочего телефона
              example: ["+3 (622) 346-59-879", "+79999999999"]
            user_telephone_number_ext:
              type: string
              description: Добавочный номер
              example: 822
            user_certificates:
              type: array
              description: Сертификаты пользователя
              items:
                $ref: '#/components/schemas/UserCertificate'
              default: []
            user_ssh_public_keys:
              type: array
              description: Ключи SSH пользователя
              items:
                $ref: '#/components/schemas/UserSSHPublicKey'
              default: []
            user_locked:
              type: boolean
              description: Состояние блокировки пользователя
            user_editable:
              type: boolean
              description: Признак возможности редактирования пользователя
          anyOf:
            - required:
              - user_first_name
            - required:
              - user_last_name
            - required:
              - user_first_name 
              - user_last_name               
          required:
            - user_login
            - user_common_name
            - user_organizational_unit_dn
            - user_locked
        - $ref: '#/components/schemas/Address'
    UserCreate:
      description: Новый пользователь
      allOf:
        - type: object
          properties:
            ipantsecurityidentifier:
              type: object
              description: Идентификатор безопасности NT
            mepmanagedentry: 
              type: object
              description: Управляемая запись
            krbextradata:
              type: object
              description: Пароль
              properties:
                  __base64__:
                    type: string
                    description: Пароль
            krblastpwdchange:
              type: object
              description: Последнее изменение пароля
              properties:
                __datetime__:
                  type: string
                  description: Дата изменения пароля
            krbpasswordexpiration:
              type: object
              description: Дата окончания действия пароля
              properties:
                __datetime__:
                  type: string
                  description: Дата окончания действия пароля
            cn:
              type: array
              description: Полное имя пользователя
            user_uid_number:
              type: integer
              description: Уникальный номер пользователя
            user_organizational_unit_name:
              type: string
              description: Имя подразделения, относящиеся к пользователю
            user_organizational_unit_dn:
              type: string
              description: 'DN подразделения, которому принадлежит пользователь'
            user_title:
              type: string
              description: Должность
            user_manager_common_name:
              type: string
              description: Полное имя руководителя пользователя
              readOnly: true
            user_manager_dn:
              type: string
              description: DN руководителя пользователя
            user_password:
              type: string
              description: Пароль пользователя
            user_password_expiration_date:
              type: string
              description: Дата истечения срока действия пароля
              format: date-time
              readOnly: true
            user_mail:
              type: string
              format: email
              description: Почтовый адрес пользователя
            user_mobile:
              type: string
              description: Номер мобильного телефона пользователя
              example: +7 (968) 2280822
            user_telephone_number:
              type: string
              description: Номер рабочего телефона
              example: +7 (945) 4321267
            user_telephone_number_ext:
              type: string
              description: Добавочный номер
              example: 822
            user_certificates:
              type: array
              description: Сертификаты пользователя
              items:
                $ref: '#/components/schemas/UserCertificate'
              default: []
            user_ssh_public_keys:
              type: array
              description: Ключи SSH пользователя
              items:
                $ref: '#/components/schemas/UserSSHPublicKey'
              default: []
            user_locked:
              type: boolean
              description: Состояние блокировки пользователя
            user_editable:
              type: boolean
              description: Признак возможности редактирования пользователя
          required:
            - user_login
            - user_first_name
            - user_last_name
            - user_common_name
            - user_organizational_unit_dn
            - user_locked
        - $ref: '#/components/schemas/Address'        
    UserListItem:
      description: Элемент списка пользователей
      type: object
      properties:
        userlistitem_login:
          type: string
          description: Наименование учетной записи пользователя в операционной системе
          pattern: "(?!^[0-9]+$)^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$"
          maxLength: 255
        userlistitem_dn:
          type: string
          description: DN учетной записи пользователя в операционной системе
        userlistitem_common_name:
          type: string
          description: Полное имя
        userlistitem_common_short_name:
          type: string
          description: Сокращенное имя
        userlistitem_common_lastname:
          type: string
          description: Фамилия пользователя. Поле может быть обязательном, зависит от настроек домена
        userlistitem_common_firstname:
          type: string
          description: Имя пользователя. Поле может быть обязательном, зависит от настроек домена
        userlistitem_common_middlename:
          type: string
          description: Отчество пользователя
        userlistitem_organizational_unit_name:
          type: string
          description: Наименование организационного подразделения, которому принадлежит
            пользователь
        userlistitem_organizational_unit_dn:
          type: string
          description: DN организационного подразделения, которому принадлежит пользователь
        userlistitem_title:
          type: string
          description: Должность
        userlistitem_locked:
          type: boolean
          description: Состояние блокировки пользователя
      required:
      - userlistitem_login
      - userlistitem_dn
      - userlistitem_common_name
      - userlistitem_organizational_unit_name
      - userlistitem_organizational_unit_dn
      - userlistitem_locked
    UserCreateDTO:
      type: object
      description: Модель данных для создания нового пользователя.
      properties:
        usercreatedto_user_login:
          type: string
          description: Учетная запись пользователя
          pattern: '(?!^[0-9]+$)^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$'
          maxLength: 255
        usercreatedto_user_first_name:
          type: string
          description: Имя пользователя
        usercreatedto_user_middle_name:
          type: string
          description: Отчетство пользователя
        usercreatedto_user_last_name:
          type: string
          description: Фамилия пользователя
        usercreatedto_user_organizational_unit_dn:
          type: string
          description: 'DN подразделения, которому принадлежит пользователь'
        usercreatedto_user_password:
          type: string
          description: Пароль пользователя
          format: password
      required:
        - usercreatedto_user_login
        - usercreatedto_user_first_name
        - usercreatedto_user_last_name
        - usercreatedto_user_organizational_unit_dn
        - usercreatedto_user_password
    UserGroup:
      description: Группа пользователей
      type: object
      properties:
        usergroup_name:
          type: string
          description: Наименование группы пользователей
          pattern: '(?!^[0-9]+$)^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$'
        usergroup_dn:
          type: string
          description: DN группы пользователей
          readOnly: true
        usergroup_description:
          type: string
          description: Описание группы пользователей
        usergroup_group_id:
          type: integer
          description: Уникальный номер группы (POSIX группы)
          minimum: 1
          maximum: 2147483647
          readOnly: true
        usergroup_type:
          type: string
          description: Тип группы пользователей
          enum:
            - posix
            - nonposix
            - external
          default: posix
          readOnly: true
        usergroup_organizational_unit_name:
          type: string
          description: 'Наименование подразделения, которому принадлежит группа пользователей'
        usergroup_organizational_unit_dn:
          type: string
          description: 'DN подразделения, которому принадлежит группа пользователей'
      required:
        - usergroup_name
        - usergroup_dn
        - usergroup_organizational_unit_name
        - usergroup_organizational_unit_dn
    DSServerSchemaAttributeType:
      type: object
      description: Элемент справочника типов данных атрибутов схемы службы каталогов
      properties:
        dsserverschemaattributetype_name:
          type: string
          description: Наименование типа атрибута
        dsserverschemaattributetype_oid:
          type: string
          description: Уникальный идентификатор (OID) типа атрибута
      required:
        - dsserverschemaattributetype_name
        - dsserverschemaattributetype_oid
    DSServerSchemaCustomUserAttribute:
      type: object
      description: Дополнительный атрибут схемы пользователя
      properties:
        dsserverschemacustomuserattribute_id:
          type: string
          description: 'Уникальный id атрибута'
        dsserverschemacustomuserattribute_name:
          type: string
          description: Наименование атрибута
        dsserverschemacustomuserattribute_oid:
          type: string
          description: Уникальный идентификатор (OID) атрибута
          readOnly: true
        dsserverschemacustomuserattribute_syntax:
          type: string
          description: Уникальный идентификатор (OID) типа данных атрибута
          enum:
            - 1.3.6.1.1.16.1
            - 1.3.6.1.4.1.4203.1.1.2
            - 1.3.6.1.4.1.1466.115.121.1.7
            - 1.3.6.1.4.1.1466.115.121.1.12
            - 1.3.6.1.4.1.1466.115.121.1.15
            - 1.3.6.1.4.1.1466.115.121.1.24
            - 1.3.6.1.4.1.1466.115.121.1.27
            - 1.3.6.1.4.1.1466.115.121.1.50
        dsserverschemacustomuserattribute_syntax_name:
          type: string
          description: 'Уникальное описание типа данных атрибута'
        dsserverschemacustomuserattribute_necessity:
          type: string
          description: Необходимость обязательного определения значения атрибута
          enum:
            - may
            - must
        dsserverschemacustomuserattribute_equality:
          type: string
          description: 'Тип равенства при сравнении значений атрибута (https://ldap.com/matching-rules/)'
          enum:
            - caseIgnoreMatch
            - caseIgnoreIA5Match
            - caseIgnoreListMatch
            - caseIgnoreOrderingMatch
            - caseIgnoreSubstringsMatch
            - caseIgnoreIA5SubstringsMatch
            - caseExactMatch
            - caseExactIA5Match
            - caseExactOrderingMatch
            - caseExactSubstringsMatch
            - octetStringMatch
            - octetStringOrderingMatch
            - booleanMatch
            - distinguishedNameMatch
            - uniqueMemberMatch
            - generalizedTimeMatch
            - generalizedTimeOrderingMatch
            - integerMatch
            - integerOrderingMatch
            - numericStringMatch
            - numericStringOrderingMatch
            - numericStringSubstringsMatch
            - telephoneNumberMatch
            - telephoneNumberSubstringsMatch
            - uuidMatch
            - uuidOrderingMatch
        dsserverschemacustomuserattribute_equality_name:
          type: string
          description: 'Описание равенства при сравнении значений атрибута'
      required:
        - dsserverschemacustomuserattribute_name
        - dsserverschemacustomuserattribute_oid
        - dsserverschemacustomuserattribute_syntax
        - dsserverschemacustomuserattribute_necessity
    NotFoundResponse:
      type: object
      properties:
        code:
          type: string
          description: Статус ошибки
        error:
          type: string
          description: Уникальный идентификатор ошибки
        success:
          type: boolean
          description: Результат выполнения операции
      required:
        - error
        - success
    PreservedUser:
      description: Карточка хранимого пользователя
      allOf:
        - type: object
          properties:
            user_login:
              type: string
              description: Учетная запись пользователя
              pattern: '(?!^[0-9]+$)^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$'
              maxLength: 255
            user_first_name:
              type: string
              description: Имя пользователя. Поле может быть обязательном, зависит от настроек домена
            user_middle_name:
              type: string
              description: Отчество пользователя
            user_last_name:
              type: string
              description: Фамилия пользователя. Поле может быть обязательном, зависит от настроек домена
            user_common_name:
              type: string
              description: Полное имя пользователя
            user_photo:
              type: string
              description: Фотография пользователя в формате JPEG (LDAP syntax OID 1.3.6.1.4.1.1466.115.121.1.28)
            user_uid_number:
              type: integer
              description: Уникальный номер пользователя
            user_mail:
              type: string
              format: email
              description: Почтовый адрес пользователя
            user_mobile:
              type: array
              items:
                type: string
              description: Номер мобильного телефона пользователя
              example: ["+3 (622) 346-59-879", "+79999999999"]
            user_telephone_number:
              type: array
              items:
                type: string
              description: Номер рабочего телефона
              example: ["+3 (622) 346-59-879", "+79999999999"]
            user_telephone_number_ext:
              type: string
              description: Добавочный номер
              example: 822
            user_certificates:
              type: array
              description: Сертификаты пользователя
              items:
                $ref: '#/components/schemas/UserCertificate'
              default: []
            user_ssh_public_keys:
              type: array
              description: Ключи SSH пользователя
              items:
                $ref: '#/components/schemas/UserSSHPublicKey'
              default: []
            user_locked:
              type: boolean
              description: Состояние блокировки пользователя
            user_preserved_time:
              type: string
              description: дата-время удаления пользователя в корзину
            user_remove_time:
              type: string
              description: дата-время окончательного удаления пользователя
          anyOf:
            - required:
              - user_first_name
            - required:
              - user_last_name
            - required:
              - user_first_name 
              - user_last_name 
          required:
            - user_login
            - user_common_name
            - user_locked
        - $ref: '#/components/schemas/Address'
    PreservedUserListItem:
      description: Хранимые пользователи
      type: object
      properties:
        userlistitem_login:
          type: string
          description: Наименование учетной записи пользователя в операционной системе
          pattern: "(?!^[0-9]+$)^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$"
          maxLength: 255
        userlistitem_dn:
          type: string
          description: DN учетной записи пользователя в операционной системе
        userlistitem_common_name:
          type: string
          description: Полное имя
        userlistitem_common_short_name:
          type: string
          description: Сокращенное имя
        userlistitem_preserved_time:
          type: string
          description: Дата-время удаления пользователя в корзину
        userlistitem_remove_time:
          type: string
          description: Дата-время окончательного удаления пользователя
        userlistitem_locked:
          type: boolean
          description: Состояние блокировки пользователя
      required:
      - userlistitem_login
      - userlistitem_dn
      - userlistitem_common_name
      - userlistitem_locked
    UserGroupListItem:
      type: object
      description: Элемент списка группы пользователей
      properties:
        usergrouplistitem_name:
          type: string
          description: Наименование группы пользователей
          pattern: '(?!^[0-9]+$)^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*[a-zA-Z0-9_.$-]?$'
        usergrouplistitem_dn:
          type: string
          description: DN группы пользователей
          readOnly: true
        usergrouplistitem_description:
          type: string
          description: Описание группы пользователей
        usergrouplistitem_organizational_unit_name:
          type: string
          description: 'Наименование подразделения, которому принадлежит группа пользователей'
        usergrouplistitem_organizational_unit_dn:
          type: string
          description: 'DN подразделения, которому принадлежит группа пользователей'
      required:
        - usergrouplistitem_name
        - usergrouplistitem_dn
        - usergrouplistitem_organizational_unit_name
        - usergrouplistitem_organizational_unit_dn
    UserCustomAttribute:
      type: object
      description: Дополнительный атрибут пользователя
      properties:
        usercustomattribute_name:
          type: string
          description: Наименование атрибута
        usercustomattribute_id:
          type: string
          description: Уникальный идентификатор атрибута
        usercustomattribute_value:
          type: string
          description: Значение атрибута
        usercustomattribute_syntax:
          type: string
          description: Тип данных атрибута
          readOnly: true
        usercustomattribute_required:
          type: boolean
          default: false
          description: Обязательность атрибута
          readOnly: true
      required:
        - usercustomattribute_name
        - usercustomattribute_value
        - usercustomattribute_syntax
    UserCustomAttributePatch:
      type: object
      description: Дополнительный атрибут пользователя
      properties:
        usercustomattribute_id:
          type: string
          description: Уникальный идентификатор атрибута
        usercustomattribute_value:
          type: string
          description: Значение атрибута
        usercustomattribute_syntax:
          type: string
          description: Тип данных атрибута
          readOnly: true
        usercustomattribute_required:
          type: boolean
          default: false
          description: Обязательность атрибута
          readOnly: true
      required:
        - usercustomattribute_value
        - usercustomattribute_syntax
    UserCertificate:
      type: object
      description: Сертификат пользователя
      properties:
        usercertificate_body:
          type: string
          description: Данные сертификата пользователя в формате PEM или base64
      required:
        - usercertificate_body
    UserSSHPublicKey:
      type: object
      description: Открытый SSH-ключ пользователя
      properties:
        usersshpublickey_body:
          type: string
          description: Тело открытого SSH-ключа пользователя
      required:
        - userpublicsshkey_body
    DNSForwardZone:
      type: object
      description: Зона перенаправления DNS
      properties:
        dnsforwardzone_name:
          type: string
          description: Имя зоны перенаправления DNS
          readOnly: true
        dnsforwardzone_forwarders:
          type: array
          description: Перенаправители зон (ip адрес или DNS имя)
          items:
            type: string
          minItems: 1
        dnsforwardzone_policy:
          type: string
          description: Политика перенаправления
          enum:
            - only
            - first
            - none
        dnsforwardzone_enabled:
          type: boolean
          description: Состояние зоны перенаправления DNS(на латинице)
          readOnly: true
        dnsforwardzone_enabled_display_name:
          type: string
          description: Отображаемое имя состояния зоны перенаправления DNS(на кириллице)
          example: 'Включено'
      required:
        - dnsforwardzone_forwarders
        - dnsforwardzone_policy
        - dnsforwardzone_enabled
    DNSRecordEntry:
      type: object
      description: Базовая схема типа DNS записи
      properties:
        dnsrecord_type:
          type: string
          description: Тип записи
          enum:
            - A
            - AAAA
            - A6
            - AFSDB
            - CERT
            - CNAME
            - DNAME
            - DS
            - DLV
            - KX
            - LOC
            - MX
            - NAPTR
            - NS
            - PTR
            - SRV
            - SSHFP
            - TLSA
            - TXT
            - URI
        dnsrecord_data:
          type: string
          description: 'Дополнительные поля конкретного типа записи, занесенные в строку через пробел (space)'
          readOnly: true
        dnsrecordlistitem_uid:
          type: string
          description: 'Идентификатор записи'
          readOnly: true
      required:
        - dnsrecord_type
        - dnsrecord_data
    DNSZoneListItem:
      type: object
      description: Элемент списка зон DNS
      properties:
        dnszonelistitem_name:
          type: string
          description: Имя зоны DNS
        dnszonelistitem_status:
          type: boolean
          default: true
          description: Состояние зоны DNS
      required:
        - dnszonelistitem_name
        - dnszonelistitem_status
    GroupPolicyReport:
      type: object
      description: Данные параметров групповых политик, применяемых к пользователю
      properties:
        grouppolicyparameter_display_name:
          type: string
          description: Имя параметра групповой политики
        grouppolicy_name:
          type: string
          description: Имя объекта групповой политики
        grouppolicy_ou_display_name:
          type: string
          description: Организационное подразделение, с которого были назначены параметры групповой политики на пользователя
        grouppolicy_ou_dn:
          type: string
          description: DN организационного подразделения
        grouppolicy_os_versions:
          type: string
          description: Фильтр версии ОС, на которой должен применятся параметр
        grouppolicyparameter_attribute_list:
          type: array
          description: Список атрибутов параметра групповой политики
      required:
        - grouppolicyparameter_display_name
        - grouppolicy_name
        - grouppolicy_ou_display_name
        - grouppolicy_ou_dn
        - grouppolicy_os_versions
        - grouppolicyparameter_attribute_list
    SoftwareComputerReport:
      type: object
      description: Назначение ПО
      properties:
        softwarereport_software_display_name:
          type: string
          description: Наименование ПО
          example: 'Zoom'
        softwarereport_software_parameter_group_order:
          type: integer
          description: Идентификатор экземпляра списка атрибутов параметра ПО
        softwarereport_software_parameter_display_name:
          type: string
          description: Отображаемое наименование ПО
        softwarereport_software_parameter_cn:
          type: string
          description: СN объекта ПО
        softwarereport_software_parameter_value:
          type: string
          description: Значение параметра
        softwarereport_software_parameter_id:
          type: string
          description: Идентификатор ПО
        softwarereport_software_parameter_is_redefined:
          type: boolean
          description: Переопределено на хосте
          example: False
    SoftwareComputerParameter:
      type: object
      description: Параметры ПО
      properties:
        softwarereport_software_display_name:
          type: string
          description: Наименование ПО
        softwarereport_software_parameter_cn:
          type: string
          description: СN объекта ПО
        softwarereport_software_parameter_display_name:
          type: string
          description: Отображаемое наименование ПО
        softwarereport_software_parameter_value:
          type: string
          description: Значение параметра
        softwarereport_software_parameter_id:
          type: string
          description: Идентификатор ПО

    UserProxyAddress:
      title: UserProxyAddress
      x-stoplight:
        id: c2fudvtvo482i
      type: object
      description: Запись адреса пользователя
      properties:
        userproxyaddress_type:
          type: string
          description: Тип адреса
          enum:
            - SMTP
            - smtp
            - sip
            - x500
        userproxyaddress_body:
          type: string
          description: Адрес
      required:
        - userproxyaddress_type
        - userproxyaddress_body   
    Whoami:
      type: object
      description: Текущая сессия пользователя
      properties:
        object:
          type: string
          description: Имя пользователя
          example: admin
        command:
          type: string
          description: Команда для отображение пользователя из FreeIpa
          example: user_show/1
        arguments:
          type: array
          description: Дополнительные аргументы, передаваемые в FreeIpa
          items:
            type: string
            example: admin
        messages:
          type: array
          description: Дополнительная информация из FreeIpa
          items:
            type: object
            properties:
              'type':
                type: string
                description: Тип сообщения
                example: warning
              name:
                type: string
                description: Название сообщения
                example: VersionMissing
              message:
                type: string
                description: Содержимое сообщения
                example: API Version number was not sent, forward compatibility not guaranteed. Assuming server's API version, 2.239
              code:
                type: integer
                description: Код сообщения
                example: 13001
              data:
                type: object
                description: Дополнительная информация
                properties:
                  server_version:
                    type: string
                    description: Версия сервера
                    example: '2.239'
  responses:
    UnauthorizedError:
      description: Ошибка аутентификации (HTTP 401).
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Сообщение об ошибке
                default: "Пожалуйста, выполните авторизацию"
              success:
                type: boolean
                description: Результат выполнения операции
                default: false                
              code:
                type: string
                description: Статус ответа
                default: UnauthorizedError
    NotFoundResponse:
      description: Объект не найден (HTTP 404).
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Сообщение об ошибке
              success:
                type: boolean
                description: Результат выполнения операции
                default: false
            required:
              - error
              - success
    ConflictResponse:
      description: Объект уже создан (HTTP 409).
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Сообщение об ошибке
              success:
                type: boolean
                description: Результат выполнения операции
                default: false
            required:
              - error
              - success
    ErrorResponse:
      description: Стандартное сообщение об ошибке (HTTP 500).
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Сообщение об ошибке
              code:
                type: string
                description: Символьный код типа ошибки
                example: '5xx'
              success:
                type: boolean
                description: Результат выполнения операции
                default: false
            required:
              - error
    DeniedError:
      description: Ошибка авторизации (HTTP 403).
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Сообщение об ошибке
                default: Отсутствуют права на выполнение данной операции
              code:
                type: string
                description: Статус ответа
                default: DeniedError
              success:
                type: boolean
                description: Результат выполнения операции
                default: false
            required:
              - error
              - success
  parameters:
    FieldsQueryParam:
      name: fields
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: 'Массив полей модели данных, которые должны быть включены в ответ'
    FiltersQueryParam:
      name: filters
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/FilterQueryParam'
      description: 'Правила фильтрации, применяемые к массиву записей'
    LimitQueryParam:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: 'Лимит возвращаемых записей, значение 0 возвращает первое значение, любое отрицательное значение возвращает все доступные записи'
    OffsetQueryParam:
      name: offset
      in: query
      required: false
      schema:
        type: integer
      description: Сдвиг по массиву записей для реализации пагинации
    OrderByQueryParam:
      name: sortby
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      description: 'Правила сортировки для возвращаемого массива данных, пример: sortby=field1,-field2, где: field1,field2 - перечисление полей, по которым производится сортировка, знак "-" перед полем определяет обратную сортировку'
tags:
  - name: 'Аутентификация пользователя'
  - name: 'Служба каталогов: Справочники'
  - name: 'Служба каталогов: Пользователи'
  - name: 'Служба каталогов: Группы пользователей'
  - name: 'Служба каталогов: Компьютеры'
  - name: 'Служба каталогов: Группы компьютеров'
  - name: 'Служба каталогов: Организационная структура'
security:
  - basicAuth: []
